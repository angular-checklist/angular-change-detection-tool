{"version":3,"file":"tracing.js","sourceRoot":"","sources":["../../src/visualisation/tracing.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6DAAoE;AACpE,0CAAoE;AAIpE,wBAAwB;AACxB,IAAM,cAAc,GAAG,8BAA8B,CAAC;AAgBtD;IAA4B,0BAAqC;IAAjE;;IAiDA,CAAC;IA7CA,wBAAO,GAAP,UAAQ,IAAY,EAAE,OAAO,EAAE,WAAW;QACzC,8CAA8C;QAC9C,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,WAAW,CAAC,CAAC;IACtC,CAAC;IAED,yBAAQ,GAAR,UAAS,IAA+C;;QACvD,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAM,GAAG,GAAQ,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACzC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;;YACjD,KAA2B,IAAA,KAAA,SAAA,IAAI,CAAC,OAAO,EAAE,CAAA,gBAAA,4BAAE;gBAAhC,IAAA,wBAAY,EAAX,YAAI,EAAE,YAAI;gBACrB,IAAM,KAAK,GAAG,kBAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,yBAAa,CAAC;gBACpD,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;aACrC;;;;;;;;;IACF,CAAC;IAEO,6BAAY,GAApB;QACC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QACzB,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS,EAAE;YAC5C,MAAM;gBACJ,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,cAAc,CAAuB;oBACrE,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAEzC,MAAM,CAAC,EAAE,GAAG,cAAc,CAAC;YAC3B,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC;YACxC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC;YAC1C,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,wOAUnB,CAAC;SACL;QAED,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;YACvB,IAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC;YAC7C,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SAC3C;QACD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACtB,CAAC;IACF,aAAC;AAAD,CAAC,AAjDD,CAA4B,uCAAiB,GAiD5C;AAjDY,wBAAM;AAmDnB,SAAS,UAAU,CAClB,GAA6B,EAC7B,WAA+B,EAC/B,WAAmB,EACnB,WAAmB;IAEnB,UAAU;IACV,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;IAClB,GAAG,CAAC,WAAW,GAAG,yBAAa,CAAC;IAEhC,GAAG,CAAC,UAAU,CACb,WAAW,CAAC,IAAI,GAAG,CAAC,EACpB,WAAW,CAAC,GAAG,GAAG,CAAC,EACnB,WAAW,CAAC,KAAK,GAAG,CAAC,EACrB,WAAW,CAAC,MAAM,GAAG,CAAC,CACtB,CAAC;IAEF,QAAQ;IACR,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC;IAClB,GAAG,CAAC,WAAW,GAAG,yBAAa,CAAC;IAChC,GAAG,CAAC,UAAU,CACb,WAAW,CAAC,IAAI,GAAG,WAAW,EAC9B,WAAW,CAAC,GAAG,GAAG,WAAW,EAC7B,WAAW,CAAC,KAAK,GAAG,WAAW,EAC/B,WAAW,CAAC,MAAM,GAAG,WAAW,CAChC,CAAC;IACF,GAAG,CAAC,WAAW,GAAG,WAAW,CAAC;IAE9B,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAErB,SAAS;IACT,GAAG,CAAC,SAAS,GAAG,WAAW,CAAC;IAC5B,GAAG,CAAC,UAAU,CACb,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,EAC9C,WAAW,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,EAC7C,WAAW,CAAC,KAAK,GAAG,WAAW,EAC/B,WAAW,CAAC,MAAM,GAAG,WAAW,CAChC,CAAC;IAEF,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC;AAED,SAAgB,iBAAiB,CAAC,IAAgB;IACjD,OAAO;QACN,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,GAAG,EAAE,IAAI,CAAC,GAAG;QACb,KAAK,EAAE,IAAI,CAAC,KAAK;QACjB,MAAM,EAAE,IAAI,CAAC,MAAM;KACnB,CAAC;AACH,CAAC;AAPD,8CAOC","sourcesContent":["import { PoolData, UpdatePoolManager } from './update-pool-manager';\nimport { COLORS, HOTTEST_COLOR, OUTLINE_COLOR } from '../constants';\n\ndeclare const Zone;\n\n// Id of the canvas node\nconst CANVAS_NODE_ID = 'TraceUpdatesWebNodePresenter';\n\ninterface TracingMeasurement {\n\tleft: number;\n\ttop: number;\n\twidth: number;\n\theight: number;\n}\n\ninterface TracingData {\n\thit: number;\n\ttagName: string;\n\texpiration: number;\n\tmeasurement: TracingMeasurement;\n}\n\nexport class Tracer extends UpdatePoolManager<TracingMeasurement> {\n\t// Canvas reference\n\tcanvas: HTMLCanvasElement;\n\n\tpresent(uuid: string, tagName, measurement) {\n\t\t// Add this measurement to the pool of updates\n\t\tthis.add(uuid, tagName, measurement);\n\t}\n\n\tdrawImpl(pool: Map<string, PoolData<TracingMeasurement>>) {\n\t\tthis.ensureCanvas();\n\t\tconst canvas = this.canvas;\n\t\tconst ctx: any = canvas.getContext('2d');\n\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\tfor (const [uuid, data] of pool.entries()) {\n\t\t\tconst color = COLORS[data.hit - 1] || HOTTEST_COLOR;\n\t\t\tdrawBorder(ctx, data.data, 1, color);\n\t\t}\n\t}\n\n\tprivate ensureCanvas() {\n\t\tlet canvas = this.canvas;\n\t\tif (canvas === null || canvas === undefined) {\n\t\t\tcanvas =\n\t\t\t\t(window.document.getElementById(CANVAS_NODE_ID) as HTMLCanvasElement) ||\n\t\t\t\twindow.document.createElement('canvas');\n\n\t\t\tcanvas.id = CANVAS_NODE_ID;\n\t\t\tcanvas.width = window.screen.availWidth;\n\t\t\tcanvas.height = window.screen.availHeight;\n\t\t\tcanvas.style.cssText = `\n        xx-background-color: red;\n        xx-opacity: 0.5;\n        bottom: 0;\n        left: 0;\n        pointer-events: none;\n        position: fixed;\n        right: 0;\n        top: 0;\n        z-index: 1000000000;\n      `;\n\t\t}\n\n\t\tif (!canvas.parentNode) {\n\t\t\tconst root = window.document.documentElement;\n\t\t\troot.insertBefore(canvas, root.firstChild);\n\t\t}\n\t\tthis.canvas = canvas;\n\t}\n}\n\nfunction drawBorder(\n\tctx: CanvasRenderingContext2D,\n\tmeasurement: TracingMeasurement,\n\tborderWidth: number,\n\tborderColor: string\n) {\n\t// outline\n\tctx.lineWidth = 1;\n\tctx.strokeStyle = OUTLINE_COLOR;\n\n\tctx.strokeRect(\n\t\tmeasurement.left - 1,\n\t\tmeasurement.top - 1,\n\t\tmeasurement.width + 2,\n\t\tmeasurement.height + 2\n\t);\n\n\t// inset\n\tctx.lineWidth = 1;\n\tctx.strokeStyle = OUTLINE_COLOR;\n\tctx.strokeRect(\n\t\tmeasurement.left + borderWidth,\n\t\tmeasurement.top + borderWidth,\n\t\tmeasurement.width - borderWidth,\n\t\tmeasurement.height - borderWidth\n\t);\n\tctx.strokeStyle = borderColor;\n\n\tctx.setLineDash([0]);\n\n\t// border\n\tctx.lineWidth = borderWidth;\n\tctx.strokeRect(\n\t\tmeasurement.left + Math.floor(borderWidth / 2),\n\t\tmeasurement.top + Math.floor(borderWidth / 2),\n\t\tmeasurement.width - borderWidth,\n\t\tmeasurement.height - borderWidth\n\t);\n\n\tctx.setLineDash([0]);\n}\n\nexport function createMeasurement(rect: ClientRect) {\n\treturn {\n\t\tleft: rect.left,\n\t\ttop: rect.top,\n\t\twidth: rect.width,\n\t\theight: rect.height\n\t};\n}\n"]}