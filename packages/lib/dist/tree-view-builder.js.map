{"version":3,"file":"tree-view-builder.js","sourceRoot":"","sources":["../src/tree-view-builder.ts"],"names":[],"mappings":";;AAAA,qDAAsE;AACtE,yCAAkD;AAoBlD;IAIC;IAAe,CAAC;IAEhB,yCAAe,GAAf,UACC,iBAA+B,EAC/B,kBAAiC;QAEjC,IAAI,CAAC,kBAAkB,EAAE;YACxB,IAAI,CAAC,gBAAgB,GAAG,iBAAiB,CAAC;YAC1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,gBAAgB,CAAC;SACjD;aAAM;YACN,kBAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YACpD,IAAI,CAAC,mBAAmB,GAAG,iBAAiB,CAAC;SAC7C;IACF,CAAC;IACF,sBAAC;AAAD,CAAC,AAlBD,IAkBC;AAlBY,0CAAe;AAoB5B,SAAgB,qBAAqB,CACpC,YAA0B;IAE1B,OAAO;QACN,IAAI,EAAE,YAAY,CAAC,KAAK,CAAC,mBAAI,CAAC,CAAC,+BAAmB,CAAC;QACnD,QAAQ,EAAE,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,gBAAgB;YACnD,OAAA,qBAAqB,CAAC,gBAAgB,CAAC;QAAvC,CAAuC,CACvC;QACD,OAAO,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO;QACtC,MAAM,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,oBAAK,CAAC,uBAAyB,CAAC,KAAK,CAAC;KAClE,CAAC;AACH,CAAC;AAXD,sDAWC;AAED,SAAgB,0BAA0B,CACzC,KAAY,EACZ,MAAe,EACf,MAAqB;IAErB,OAAO;QACN,KAAK,OAAA;QACL,YAAY,EAAE,CAAC;QACf,QAAQ,EAAE,EAAE;QACZ,MAAM,QAAA;QACN,MAAM,QAAA;KACN,CAAC;AACH,CAAC;AAZD,gEAYC","sourcesContent":["import { FLAGS, HOST, LView, LViewFlags } from './types/angular_core';\nimport { DEVTOOLS_IDENTIFIER } from './constants';\n\nexport interface SerializedTreeViewItem {\n\tuuid: string;\n\tchildren: SerializedTreeViewItem[];\n\tonPush: boolean;\n\ttagName: string;\n}\n\nexport interface TreeViewItem {\n\tlView: LView;\n\tcurrentIndex: number;\n\tchildren: TreeViewItem[];\n\tcurrentViewRefIndex?: number;\n\tparent?: TreeViewItem;\n\tisRoot: boolean;\n\tnextCurrent?: any;\n\tdynamicEmbeddedViewsChecked?: boolean;\n}\n\nexport class TreeViewBuilder {\n\trootTreeViewItem: TreeViewItem;\n\tcurrentTreeViewItem: TreeViewItem;\n\n\tconstructor() {}\n\n\taddTreeViewItem(\n\t\tchildTreeViewItem: TreeViewItem,\n\t\tparentTreeViewItem?: TreeViewItem\n\t) {\n\t\tif (!parentTreeViewItem) {\n\t\t\tthis.rootTreeViewItem = childTreeViewItem;\n\t\t\tthis.currentTreeViewItem = this.rootTreeViewItem;\n\t\t} else {\n\t\t\tparentTreeViewItem.children.push(childTreeViewItem);\n\t\t\tthis.currentTreeViewItem = childTreeViewItem;\n\t\t}\n\t}\n}\n\nexport function serialiseTreeViewItem(\n\ttreeViewItem: TreeViewItem\n): SerializedTreeViewItem {\n\treturn {\n\t\tuuid: treeViewItem.lView[HOST][DEVTOOLS_IDENTIFIER],\n\t\tchildren: treeViewItem.children.map(loopTreeViewItem =>\n\t\t\tserialiseTreeViewItem(loopTreeViewItem)\n\t\t),\n\t\ttagName: treeViewItem.lView[0].tagName,\n\t\tonPush: (treeViewItem.lView[FLAGS] & LViewFlags.CheckAlways) === 0\n\t};\n}\n\nexport function createInitialTreeViewState(\n\tlView: LView,\n\tisRoot: boolean,\n\tparent?: TreeViewItem\n): TreeViewItem {\n\treturn {\n\t\tlView,\n\t\tcurrentIndex: 0,\n\t\tchildren: [],\n\t\tisRoot,\n\t\tparent\n\t};\n}\n"]}